name: X86_64_SDK

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Check Server Performance
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo "CPU核心数量: $(nproc)"
        echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息:"
        echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT


    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://git.kejizero.online/zhao/files/raw/branch/main/Rely/ubuntu2204)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout
      uses: actions/checkout@main

    - name: Download and unzip the SDK
      run: |
        df -hT $GITHUB_WORKSPACE
        curl -L ${{ secrets.SDK_X86_64_URL }} -o x86_64.tar.zst
        tar -I zstd -xvf x86_64.tar.zst
        mv openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64 openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

    - name: Install Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        rm -rf feeds/packages/lang/golang
        rm -rf feeds/packages/utils/coremark
        rm -rf feeds/luci/applications/luci-app-alist
        rm -rf feeds/packages/net/{alist,zerotier,xray-core,v2ray-core,v2ray-geodata,sing-box,sms-tool}
        git clone --depth=1 -b 24.x https://github.com/sbwml/packages_lang_golang feeds/packages/lang/golang

    - name: Compile Packages
      id: compile
      run: |
        cd $OPENWRT_PATH
        sed -i "1isrc-git helloworld https://github.com/oppen321/openwrt-package.git;helloworld\n" feeds.conf.default
        sed -i "2isrc-git extraipk https://github.com/oppen321/openwrt-package.git;v24.10\n" feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        rm -rf feeds/extraipk/5G-Modem-Support/rooter/0routerspecfic/rd05a1
        make defconfig
        echo -e "$(nproc) thread compile"
        make package/{luci-app-oaf,oaf,open-app-filter,alist,bash-completion,ddns-scripts-aliyun,cpufreq,ddnsto,floatip,linkease,linkmount,luci-app-3ginfo-lite,luci-app-adguardhome,luci-app-advancedplus,luci-app-airplay2,luci-app-alist,luci-app-argon-config,luci-app-chatgpt-web,luci-app-cpufreq,luci-app-ddnsto,luci-app-diskman,luci-app-eqosplus,luci-app-floatip,luci-app-kucat-config,luci-app-linkease,luci-app-lucky,luci-app-mentohust,luci-app-modemband,luci-app-mosdns,luci-app-netdata,luci-app-netwizard,luci-app-parentcontrol,luci-app-partexp,luci-app-qfirehose,luci-app-quickstart,luci-app-ramfree,luci-app-sms-tool-js,luci-app-store,luci-app-taskplan,luci-app-nft-timecontrol,luci-app-unblockneteasemusic,luci-app-usb-printer,luci-app-webdav,luci-app-wolplus,luci-app-zerotier,luci-lib-taskd,luci-lib-xterm,luci-theme-argon,luci-theme-kucat,mosdns,homebox,luci-app-netspeedtest,quickstart,taskd,v2dat,zerotier}/compile V=s
        make package/{chinadns-ng,dns2socks,dns2tcp,geoview,hysteria,ipt2socks,luci-app-daed,luci-app-homeproxy,luci-app-nikki,luci-app-openclash,luci-app-passwall,luci-app-passwall2,luci-app-ssr-plus,microsocks,naiveproxy,nikki,pdnsd,redsocks2,shadow-tls,shadowsocks-libev,shadowsocks-rust,shadowsocksr-libev,simple-obfs,sing-box,tcping,trojan-plus,trojan,tuic-client,v2ray-core,v2ray-geodata,v2ray-plugin,xray-core,xray-plugin}/compile V=s

    - name: Generate index file
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH
        make package/index
        
    - name: Organize Files
      if: steps.compile.outputs.status == 'success'
      run: |
        mkdir rom
        cp $OPENWRT_PATH//bin/packages/* rom
        tar -czvf rom.tar.gz rom
        

    - name: Upload Firmware To Release
      if: steps.compile.outputs.status == 'success'
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt-X86_64-24.10
        allowUpdates: true
        tag: OpenWrt-X86_64-24.10
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: rom.tar.gz
